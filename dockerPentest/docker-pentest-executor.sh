#!/bin/bash

#########################################################################################
#     Script: docker-pentest-executor.sh                                                #
#     Description:                                                                      #
#       Automates the setup and execution of pentesting scripts inside a Docker         #
#       container based on Debian 12. Manages dependencies, copies attack scripts,      #
#       runs them inside the container, and cleans up afterwards.                       #
#     Author: Tr4ianus                                                                  #
#     Date: 2025-08-05                                                                  #
#########################################################################################

set -e

##################################################
#                  CONFIGURATION                 #
##################################################

MAIN_DIRECTORY="project"
SECONDARY_DIRECTORY="scripts"
SERVICE_NAME="pentest"
IMAGE="debian:12"
CONTAINER="pentest_env"
HOST_SCRIPTS="/home/kali/scripts"
SCRIPT="brute-force.sh"
COMPOSE_FILE="$MAIN_DIRECTORY/docker-compose.yml"

##################################################
#               FUNCTION DEFINITIONS             #
##################################################

install_docker() {
  if ! command -v docker &> /dev/null; then
    echo "Docker not found. Installing Docker..."
    apt-get update -y
    apt-get install -y docker.io
    if ! command -v docker &> /dev/null; then
      echo "Error: Docker could not be installed."
      exit 1
    fi
  else
    echo "Docker is already installed."
  fi
}

install_docker_compose() {
  if ! command -v docker-compose &> /dev/null; then
    echo "Docker Compose not found. Installing Docker Compose..."
    apt-get install -y docker-compose
    if ! command -v docker-compose &> /dev/null; then
      echo "Error: Docker Compose could not be installed."
      exit 2
    fi
  else
    echo "Docker Compose is already installed."
  fi
}

##################################################
#                    DEPLOYMENT                  #
##################################################

echo "Starting pentest Docker environment setup..."

install_docker
install_docker_compose

mkdir -p "$MAIN_DIRECTORY/$SECONDARY_DIRECTORY"

# Check if the script exists in the host scripts directory
if [ ! -f "$HOST_SCRIPTS/$SCRIPT" ]; then
  echo "Error: Script $SCRIPT not found in $HOST_SCRIPTS"
  exit 3
fi

# Ensure the script is executable on the host before copying
chmod +x "$HOST_SCRIPTS/$SCRIPT"

# Copy the script to the project directory (only if newer or missing)
cp -u "$HOST_SCRIPTS/$SCRIPT" "$MAIN_DIRECTORY/$SECONDARY_DIRECTORY/"

# Verify script was copied successfully
if [ ! -f "$MAIN_DIRECTORY/$SECONDARY_DIRECTORY/$SCRIPT" ]; then
  echo "Error: Script $SCRIPT not found in $MAIN_DIRECTORY/$SECONDARY_DIRECTORY"
  exit 4
fi

# Ensure script is executable in the container volume directory
chmod +x "$MAIN_DIRECTORY/$SECONDARY_DIRECTORY/$SCRIPT"

# Generate docker-compose file dynamically
cat > "$COMPOSE_FILE" <<EOF
version: '3.9'

services:
  $SERVICE_NAME:
    image: $IMAGE
    container_name: $CONTAINER
    volumes:
      - ./scripts:/scripts:ro
    tty: true
    stdin_open: true
EOF

# Start container in detached mode
docker-compose -f "$COMPOSE_FILE" up -d

# Execute the script inside the container
docker exec -it $CONTAINER bash -c "cd /scripts && ./$SCRIPT"

# Clean up the container
docker-compose -f "$COMPOSE_FILE" down

echo "Pentest script executed successfully and container cleaned up."